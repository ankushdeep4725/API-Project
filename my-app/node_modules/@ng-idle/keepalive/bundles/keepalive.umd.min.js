!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common/http"),require("@ng-idle/core")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/common/http","@ng-idle/core"],e):e((t.ngidle=t.ngidle||{},t.ngidle.keepalive=t.ngidle.keepalive||{}),t.ng.core,t.ng.http,t.ng.core)}(this,function(t,e,n,i){"use strict";var o=function(){var t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),r=function(t){function i(n){var i=t.call(this)||this;return i.http=n,i.pingInterval=600,i.onPing=new e.EventEmitter,i.onPingResponse=new e.EventEmitter,i}return o(i,t),i.prototype.request=function(t){return"string"==typeof t?this.pingRequest=new n.HttpRequest("GET",t):t instanceof n.HttpRequest?this.pingRequest=t:null===t&&(this.pingRequest=null),this.pingRequest},i.prototype.interval=function(t){if(!isNaN(t)&&t>0)this.pingInterval=t;else if(!isNaN(t)&&t<=0)throw new Error("Interval value must be greater than zero.");return this.pingInterval},i.prototype.ping=function(){var t=this;this.onPing.emit(null),this.pingRequest&&this.http.request(this.pingRequest).subscribe(function(e){t.onPingResponse.emit(e)})},i.prototype.start=function(){var t=this;this.stop(),this.pingHandle=setInterval(function(){t.ping()},1e3*this.pingInterval)},i.prototype.stop=function(){this.hasPingHandle()&&(clearInterval(this.pingHandle),this.pingHandle=null)},i.prototype.ngOnDestroy=function(){this.stop()},i.prototype.isRunning=function(){return this.hasPingHandle()},i.prototype.hasPingHandle=function(){return null!==this.pingHandle&&void 0!==this.pingHandle},i.decorators=[{type:e.Injectable}],i.ctorParameters=function(){return[{type:n.HttpClient}]},i}(i.KeepaliveSvc),p=function(){function t(){}return t.forRoot=function(){return{ngModule:t,providers:[r,{provide:i.KeepaliveSvc,useExisting:r}]}},t.decorators=[{type:e.NgModule,args:[{imports:[i.NgIdleModule.forRoot()]}]}],t}();t.NgIdleKeepaliveModule=p,t.Keepalive=r,Object.defineProperty(t,"__esModule",{value:!0})});
