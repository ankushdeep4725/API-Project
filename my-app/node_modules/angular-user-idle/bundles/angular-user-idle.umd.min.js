!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("rxjs"),require("rxjs/operators")):"function"==typeof define&&define.amd?define("angular-user-idle",["exports","@angular/core","rxjs","rxjs/operators"],e):e(t["angular-user-idle"]={},t.ng.core,null,t.Rx.Observable.prototype)}(this,function(t,i,n,r){"use strict";var o=function(){},e=function(){function t(t){this.timerStart$=new n.Subject,this.timeout$=new n.Subject,this.idle=600,this.timeout=300,this.ping=120,t&&(this.idle=t.idle,this.timeout=t.timeout,this.ping=t.ping),this.activityEvents$=n.merge(n.fromEvent(window,"mousemove"),n.fromEvent(window,"resize"),n.fromEvent(document,"keydown")),this.idle$=n.from(this.activityEvents$)}return t.prototype.startWatching=function(){var e=this;this.idleSubscription&&this.idleSubscription.unsubscribe(),this.idleSubscription=this.idle$.pipe(r.bufferTime(5e3),r.filter(function(t){return!t.length&&!e.isInactivityTimer}),r.tap(function(){return e.isInactivityTimer=!0}),r.switchMap(function(){return n.interval(1e3).pipe(r.takeUntil(n.merge(e.activityEvents$,n.timer(1e3*e.idle).pipe(r.tap(function(){return e.timerStart$.next(!0)})))),r.finalize(function(){return e.isInactivityTimer=!1}))})).subscribe(),this.setupTimer(this.timeout),this.setupPing(this.ping)},t.prototype.stopWatching=function(){this.stopTimer(),this.idleSubscription&&this.idleSubscription.unsubscribe()},t.prototype.stopTimer=function(){this.timerStart$.next(!1)},t.prototype.resetTimer=function(){this.stopTimer(),this.isTimeout=!1},t.prototype.onTimerStart=function(){var e=this;return this.timerStart$.pipe(r.distinctUntilChanged(),r.switchMap(function(t){return t?e.timer$:n.of(null)}))},t.prototype.onTimeout=function(){var t=this;return this.timeout$.pipe(r.filter(function(t){return!!t}),r.tap(function(){return t.isTimeout=!0}),r.map(function(){return!0}))},t.prototype.getConfigValue=function(){return{idle:this.idle,timeout:this.timeout,ping:this.ping}},t.prototype.setConfigValues=function(t){!this.idleSubscription||this.idleSubscription.closed?(t.idle&&(this.idle=t.idle),t.ping&&(this.ping=t.ping),t.timeout&&(this.timeout=t.timeout)):console.error("Call stopWatching() before set config values")},t.prototype.setupTimer=function(e){var i=this;this.timer$=n.interval(1e3).pipe(r.take(e),r.map(function(){return 1}),r.scan(function(t,e){return t+e}),r.tap(function(t){t===e&&i.timeout$.next(!0)}))},t.prototype.setupPing=function(t){var e=this;this.ping$=n.interval(1e3*t).pipe(r.filter(function(){return!e.isTimeout}))},t.decorators=[{type:i.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:o,decorators:[{type:i.Optional}]}]},t.ngInjectableDef=i.defineInjectable({factory:function(){return new t(i.inject(o,8))},token:t,providedIn:"root"}),t}(),s=function(){function e(){}return e.forRoot=function(t){return{ngModule:e,providers:[{provide:o,useValue:t}]}},e.decorators=[{type:i.NgModule,args:[{imports:[]}]}],e}();t.UserIdleService=e,t.UserIdleConfig=o,t.UserIdleModule=s,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=angular-user-idle.umd.min.js.map